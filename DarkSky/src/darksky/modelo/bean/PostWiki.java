package darksky.modelo.bean;
// Generated 11-feb-2016 3:11:32 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import darksky.exceptions.ExceptionDAO;
import darksky.util.MyUtil;

/**
 * PostWiki generated by hbm2java
 */
@Entity
@Table(name = "post_wiki", catalog = "dark_sky")
public class PostWiki implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	private Integer id;
	private CategoriaWiki categoriaWiki;
	private Imagen imagen;
	private Usuario usuario;
	private String titulo;
	private String texto;
	private Set<Imagen> imagens = new HashSet<Imagen>(0);

	public PostWiki() {
	}

	public PostWiki(CategoriaWiki categoriaWiki, Usuario usuario, String titulo, String texto) {
		this.setCategoriaWiki(categoriaWiki);
		this.setUsuario(usuario);
		this.setTitulo(titulo);
		this.setTexto(texto);
	}

	public PostWiki(CategoriaWiki categoriaWiki, Imagen imagen, Usuario usuario, String titulo, String texto, Set<Imagen> imagens) {
		this.categoriaWiki = categoriaWiki;
		this.imagen = imagen;
		this.usuario = usuario;
		this.titulo = titulo;
		this.texto = texto;
		this.imagens = imagens;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "CATEGORIA", nullable = false)
	public CategoriaWiki getCategoriaWiki() {
		return this.categoriaWiki;
	}

	public void setCategoriaWiki(CategoriaWiki categoriaWiki) {
		if (categoriaWiki == null) throw new ExceptionDAO("Categoria no puede ser nulo");
		this.categoriaWiki = categoriaWiki;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "IMAGEN")
	public Imagen getImagen() {
		return this.imagen;
	}

	public void setImagen(Imagen imagen) {
		this.imagen = imagen;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROPIETARIO", nullable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		if (usuario == null) throw new ExceptionDAO("Usuario no puede ser nulo");
		this.usuario = usuario;
	}

	@Column(name = "TITULO", nullable = false, length = 100)
	public String getTitulo() {
		return this.titulo;
	}

	public void setTitulo(String titulo) {
		if (MyUtil.isEmpty(titulo)) {
			throw new ExceptionDAO("Titulo no puede ser nulo");
		} else if (titulo.length() > 255) {
			throw new ExceptionDAO("Titulo no puede tener mas de 255 caracteres");
		}
		
		this.titulo = titulo;
	}

	@Column(name = "TEXTO", nullable = false)
	public String getTexto() {
		return this.texto;
	}

	public void setTexto(String texto) {
		if (MyUtil.isEmpty(texto)) {
			throw new ExceptionDAO("Texto no puede ser nulo");
		} else if (texto.length() > 2000) {
			throw new ExceptionDAO("Texto no puede tener mas de 2000 caracteres");
		}
		
		this.texto = texto;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "wiki_imagen", catalog = "dark_sky", joinColumns = { @JoinColumn(name = "WIKI_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "IMAGEN_ID", nullable = false, updatable = false) })
	public Set<Imagen> getImagens() {
		return this.imagens;
	}

	public void setImagens(Set<Imagen> imagens) {
		this.imagens = imagens;
	}

}
