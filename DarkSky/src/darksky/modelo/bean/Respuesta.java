package darksky.modelo.bean;
// Generated 11-feb-2016 3:11:32 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import darksky.exceptions.ExceptionDAO;
import darksky.util.MyUtil;
import darksky.util.interfaces.Comment;

/**
 * Respuesta generated by hbm2java
 */
@Entity
@Table(name = "respuesta", catalog = "dark_sky")
public class Respuesta implements java.io.Serializable, Comment {
	private static final long serialVersionUID = 1L;
	
	private Integer id;
	private Comentario comentario;
	private Respuesta respuesta;
	private Usuario usuario;
	private String texto;
	private Long votos = new Long(1);
	private Date fechaCreacion;
	private Set<Respuesta> respuestas = new HashSet<Respuesta>(0);
	
	@Transient
	private int nivel = 1;

	public Respuesta() {
	}
	
	public Respuesta(Usuario usuario, String texto) {
		this.setUsuario(usuario);
		this.setTexto(texto);
		this.setFechaCreacion(MyUtil.getCurrentDate());
	}

	public Respuesta(Usuario usuario, String texto, Date fechaCreacion) {
		this.setUsuario(usuario);
		this.setTexto(texto);
		this.setFechaCreacion(fechaCreacion);
	}

	public Respuesta(Comentario comentario, Respuesta respuesta, Usuario usuario, String texto, Long votos, Date fechaCreacion, Set<Respuesta> respuestas) {
		this.comentario = comentario;
		this.respuesta = respuesta;
		this.usuario = usuario;
		this.texto = texto;
		this.votos = votos;
		this.fechaCreacion = fechaCreacion;
		this.respuestas = respuestas;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "COMENTARIO_ID")
	public Comentario getComentario() {
		return this.comentario;
	}

	public void setComentario(Comentario comentario) {
		this.comentario = comentario;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "RESPUESTA_ID")
	public Respuesta getRespuesta() {
		return this.respuesta;
	}

	public void setRespuesta(Respuesta respuesta) {
		this.respuesta = respuesta;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "PROPIETARIO", nullable = false)
	public Usuario getUsuario() {
		return this.usuario;
	}

	public void setUsuario(Usuario usuario) {
		if (usuario == null) throw new ExceptionDAO("Usuario no puede ser nulo");
		this.usuario = usuario;
	}

	@Column(name = "TEXTO", nullable = false)
	public String getTexto() {
		return this.texto;
	}

	public void setTexto(String texto) {
		if (MyUtil.isEmpty(texto)) {
			throw new ExceptionDAO("Texto no puede ser nulo");
		} else if (texto.length() > 2000) {
			throw new ExceptionDAO("Texto no puede tener mas de 255 caracteres");
		}
		
		this.texto = texto;
	}

	@Column(name = "VOTOS", precision = 10, scale = 0)
	public Long getVotos() {
		return this.votos;
	}

	public void setVotos(Long votos) {
		this.votos = votos;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "FECHA_CREACION", nullable = true, length = 19)
	public Date getFechaCreacion() {
		return this.fechaCreacion;
	}

	public void setFechaCreacion(Date fechaCreacion) {
		this.fechaCreacion = fechaCreacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "respuesta")
	public Set<Respuesta> getRespuestas() {
		return this.respuestas;
	}

	public void setRespuestas(Set<Respuesta> respuestas) {
		this.respuestas = respuestas;
	}
	
	@Transient
	public void setNivel(int nivel) {
		this.nivel = nivel;
	}
	
	@Transient
	public int getNivel() {
		return nivel;
	}

}
