package darksky.modelo.bean;
// Generated 11-feb-2016 3:11:32 by Hibernate Tools 4.3.1.Final

import javax.persistence.Column;
import javax.persistence.Embeddable;

import darksky.exceptions.ExceptionDAO;
import darksky.util.MyUtil;

/**
 * InventarioId generated by hbm2java
 */
@Embeddable
public class InventarioId implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	private String usuarioNick;
	private String itemNombre;

	public InventarioId() {
	}

	public InventarioId(String usuarioNick, String itemNombre) {
		this.setUsuarioNick(usuarioNick);
		this.setItemNombre(itemNombre);
	}

	@Column(name = "USUARIO_NICK", nullable = false, length = 30)
	public String getUsuarioNick() {
		return this.usuarioNick;
	}

	public void setUsuarioNick(String usuarioNick) {
		if (MyUtil.isEmpty(usuarioNick)) {
			throw new ExceptionDAO("Nick de usuario no puede ser nulo");
		} else if (usuarioNick.length() > 30) {
			throw new ExceptionDAO("Nick de usuario no puede tener mas de 30 caracteres");
		}
		
		this.usuarioNick = usuarioNick;
	}

	@Column(name = "ITEM_NOMBRE", nullable = false, length = 30)
	public String getItemNombre() {
		return this.itemNombre;
	}

	public void setItemNombre(String itemNombre) {
		if (MyUtil.isEmpty(itemNombre)) {
			throw new ExceptionDAO("Nombre de item no puede ser nulo");
		} else if (itemNombre.length() > 30) {
			throw new ExceptionDAO("Nombre de item no puede tener mas de 30 caracteres");
		}
		
		this.itemNombre = itemNombre;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof InventarioId))
			return false;
		InventarioId castOther = (InventarioId) other;

		return ((this.getUsuarioNick() == castOther.getUsuarioNick()) || (this.getUsuarioNick() != null && castOther.getUsuarioNick() != null && this.getUsuarioNick().equals(castOther.getUsuarioNick())))
				&& ((this.getItemNombre() == castOther.getItemNombre()) || (this.getItemNombre() != null && castOther.getItemNombre() != null && this.getItemNombre().equals(castOther.getItemNombre())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + (getUsuarioNick() == null ? 0 : this.getUsuarioNick().hashCode());
		result = 37 * result + (getItemNombre() == null ? 0 : this.getItemNombre().hashCode());
		return result;
	}

}
