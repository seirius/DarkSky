package darksky.modelo.bean;
// Generated 04-jun-2016 15:01:31 by Hibernate Tools 4.3.1.Final

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import darksky.exceptions.ExceptionBEAN;
import darksky.util.MyUtil;

/**
 * Menu generated by hbm2java
 */
@Entity
@Table(name = "menu", catalog = "dark_sky")
public class Menu implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	private String nombreMenu;
	private Menu menu = null;
	private String url;
	private Long nivel;
	private Long orden;
	private Set<Menu> menus = new HashSet<Menu>(0);

	public Menu() {
	}

	public Menu(String nombreMenu) {
		this.nombreMenu = nombreMenu;
	}

	public Menu(String nombreMenu, Menu menu, String url, Long nivel, Set<Menu> menus) {
		this.nombreMenu = nombreMenu;
		this.menu = menu;
		this.url = url;
		this.nivel = nivel;
		this.menus = menus;
	}

	@Id

	@Column(name = "NOMBRE_MENU", unique = true, nullable = false)
	public String getNombreMenu() {
		return this.nombreMenu;
	}

	public void setNombreMenu(String nombreMenu) {
		if (MyUtil.isEmpty(nombreMenu)) {
			throw new ExceptionBEAN("Nombre del menu no puede estar vacio");
		}
		
		if (nombreMenu.length() > 255) {
			throw new ExceptionBEAN("Nombre del menu no puede tener mas de 255 caracteres");
		}
		
		this.nombreMenu = nombreMenu;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "NOMBRE_MENU_SUPERIOR")
	public Menu getMenu() {
		return this.menu;
	}

	public void setMenu(Menu menu) {
		this.menu = menu;
	}

	@Column(name = "URL")
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		if (MyUtil.isEmpty(url)) {
			throw new ExceptionBEAN("La url no puede estar vacia");
		}
		
		if (url.length() > 255) {
			throw new ExceptionBEAN("La url no puede tener mas de 255 caracteres");
		}
		
		this.url = url;
	}

	@Column(name = "NIVEL", precision = 10, scale = 0)
	public Long getNivel() {
		return this.nivel;
	}

	public void setNivel(Long nivel) {
		this.nivel = nivel;
	}
	
	@Column(name = "ORDEN", precision = 10, scale = 0)
	public Long getOrden() {
		return this.orden;
	}

	public void setOrden(Long orden) {
		if (orden == null) {
			throw new ExceptionBEAN("Orden tiene que tener un valor");
		}
		
		this.orden = orden;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "menu")
	public Set<Menu> getMenus() {
		return this.menus;
	}

	public void setMenus(Set<Menu> menus) {
		this.menus = menus;
	}

}
