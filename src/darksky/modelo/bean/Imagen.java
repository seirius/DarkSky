package darksky.modelo.bean;
// Generated 11-feb-2016 3:11:32 by Hibernate Tools 4.3.1.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import darksky.exceptions.ExceptionDAO;
import darksky.util.MyUtil;

/**
 * Imagen generated by hbm2java
 */
@Entity
@Table(name = "imagen", catalog = "dark_sky")
public class Imagen implements java.io.Serializable {
	private static final long serialVersionUID = 1L;
	
	private Integer id;
	private String url;
	private Set<PostWiki> postWikis = new HashSet<PostWiki>(0);
	private Set<PostWiki> postWikis_1 = new HashSet<PostWiki>(0);
	private Set<Item> items = new HashSet<Item>(0);
	private Set<Post> posts = new HashSet<Post>(0);

	public Imagen() {
	}

	public Imagen(String url) {
		this.setUrl(url);
	}

	public Imagen(String url, Set<PostWiki> postWikis, Set<PostWiki> postWikis_1, Set<Item> items, Set<Post> posts) {
		this.url = url;
		this.postWikis = postWikis;
		this.postWikis_1 = postWikis_1;
		this.items = items;
		this.posts = posts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@Column(name = "URL", nullable = false)
	public String getUrl() {
		return this.url;
	}

	public void setUrl(String url) {
		if (MyUtil.isEmpty(url)) {
			throw new ExceptionDAO("URL no puede ser nula");
		} else if (url.length() > 255) {
			throw new ExceptionDAO("URL no puede tener mas de 255 caracteres");
		}
		
		this.url = url;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "wiki_imagen", catalog = "dark_sky", joinColumns = { @JoinColumn(name = "IMAGEN_ID", nullable = false, updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "WIKI_ID", nullable = false, updatable = false) })
	public Set<PostWiki> getPostWikis() {
		return this.postWikis;
	}

	public void setPostWikis(Set<PostWiki> postWikis) {
		this.postWikis = postWikis;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imagen")
	public Set<PostWiki> getPostWikis_1() {
		return this.postWikis_1;
	}

	public void setPostWikis_1(Set<PostWiki> postWikis_1) {
		this.postWikis_1 = postWikis_1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imagen")
	public Set<Item> getItems() {
		return this.items;
	}

	public void setItems(Set<Item> items) {
		this.items = items;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "imagen")
	public Set<Post> getPosts() {
		return this.posts;
	}

	public void setPosts(Set<Post> posts) {
		this.posts = posts;
	}

}
